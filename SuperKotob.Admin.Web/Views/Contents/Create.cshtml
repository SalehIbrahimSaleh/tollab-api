@model Tollab.Admin.Data.Models.Content

@{
    ViewBag.Title = "Create";
}

<h2 style="text-align:center;color:white;border-radius:25px;background:#3c8dbc">Create Content</h2>

@using (Html.BeginForm("CreateWithImage", "Contents", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h2 style="text-align:center;color:red;">@ViewBag.Message</h2>

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameLT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameLT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameLT, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(model => model.YoutubeLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YoutubeLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YoutubeLink, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="PathContent" class="form-control" accept=".mp4">
                @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" >
            @Html.LabelFor(model => model.NewPathTemp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPathTemp, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.NewPathTemp, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            List<SelectListItem> providerTypes = new List<SelectListItem>();
            providerTypes.Add(new SelectListItem
            {
                Text = "vdocipher",
                Value = "vdocipher",

            });

            providerTypes.Add(new SelectListItem
            {
                Text = "Dailymotion",
                Value = "Dailymotion",

            });
            providerTypes.Add(new SelectListItem
            {
                Text = "Vimeo",
                Value = "Vimeo"
            });
        }
        <div class="form-group">
            @Html.LabelFor(model => model.ProviderType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProviderType, providerTypes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProviderType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text"
                       id="GroupId"
                       name="GroupId"
                       data-grid-filter-field="GroupCourse"
                       class="super-autocomplete"
                       dataAutoCompleteUrl="/Groups/autocomplete"
                       dataPreSelectedIds="@Model.GroupId"
                       dataMaxItems="1" />

                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text"
                       id="ContentTypeId"
                       name="ContentTypeId"
                       data-grid-filter-field="Name"
                       class="super-autocomplete"
                       dataAutoCompleteUrl="/ContentTypes/autocomplete"
                       dataPreSelectedIds="@Model.ContentTypeId"
                       dataMaxItems="1" />

                @Html.ValidationMessageFor(model => model.ContentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsFree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFree)
                    @Html.ValidationMessageFor(model => model.IsFree, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
